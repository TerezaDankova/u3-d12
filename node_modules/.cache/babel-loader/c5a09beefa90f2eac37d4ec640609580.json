{"ast":null,"code":"var _jsxFileName = \"/Users/terezadankova/Desktop/GitHub/u3-d9/src/components/CompanySearchResults.jsx\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from 'react';\nimport { Container, Row, Col } from 'react-bootstrap';\nimport Job from './Job';\nimport uniqid from 'uniqid';\nimport { useParams } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CompanySearchResults = () => {\n  _s();\n\n  const [jobs, setJobs] = useState([]);\n  const params = useParams();\n  useEffect(() => {\n    getJobs();\n  }, []);\n  const baseEndpoint = 'https://strive-jobs-api.herokuapp.com/jobs?company=';\n\n  const getJobs = async () => {\n    try {\n      const response = await fetch(baseEndpoint + params.companyName);\n\n      if (response.ok) {\n        const {\n          data\n        } = await response.json();\n        setJobs(data);\n      } else {\n        console.log('error fetching jobs');\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: /*#__PURE__*/_jsxDEV(Row, {\n      children: /*#__PURE__*/_jsxDEV(Col, {\n        children: jobs.map(jobData => /*#__PURE__*/_jsxDEV(Job, {\n          data: jobData\n        }, uniqid(), false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n};\n\n_s(CompanySearchResults, \"dckmTRAm79Ju2O9AWzYTIwDN4qo=\", false, function () {\n  return [useParams];\n});\n\n_c = CompanySearchResults;\nexport default CompanySearchResults;\n\nvar _c;\n\n$RefreshReg$(_c, \"CompanySearchResults\");","map":{"version":3,"names":["useEffect","useState","Container","Row","Col","Job","uniqid","useParams","CompanySearchResults","jobs","setJobs","params","getJobs","baseEndpoint","response","fetch","companyName","ok","data","json","console","log","error","map","jobData"],"sources":["/Users/terezadankova/Desktop/GitHub/u3-d9/src/components/CompanySearchResults.jsx"],"sourcesContent":["import { useEffect, useState } from 'react'\nimport { Container, Row, Col } from 'react-bootstrap'\nimport Job from './Job'\nimport uniqid from 'uniqid'\nimport { useParams } from 'react-router-dom'\n\nconst CompanySearchResults = () => {\n  const [jobs, setJobs] = useState([])\n\n  const params = useParams()\n\n  useEffect(() => {\n    getJobs()\n  }, [])\n\n  const baseEndpoint = 'https://strive-jobs-api.herokuapp.com/jobs?company='\n\n  const getJobs = async () => {\n    try {\n      const response = await fetch(baseEndpoint + params.companyName)\n      if (response.ok) {\n        const { data } = await response.json()\n        setJobs(data)\n      } else {\n        console.log('error fetching jobs')\n      }\n    } catch (error) {\n      console.log(error)\n    }\n  }\n\n  return (\n    <Container>\n      <Row>\n        <Col>\n          {jobs.map((jobData) => (\n            <Job key={uniqid()} data={jobData} />\n          ))}\n        </Col>\n      </Row>\n    </Container>\n  )\n}\n\nexport default CompanySearchResults"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,SAAT,EAAoBC,GAApB,EAAyBC,GAAzB,QAAoC,iBAApC;AACA,OAAOC,GAAP,MAAgB,OAAhB;AACA,OAAOC,MAAP,MAAmB,QAAnB;AACA,SAASC,SAAT,QAA0B,kBAA1B;;;AAEA,MAAMC,oBAAoB,GAAG,MAAM;EAAA;;EACjC,MAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBT,QAAQ,CAAC,EAAD,CAAhC;EAEA,MAAMU,MAAM,GAAGJ,SAAS,EAAxB;EAEAP,SAAS,CAAC,MAAM;IACdY,OAAO;EACR,CAFQ,EAEN,EAFM,CAAT;EAIA,MAAMC,YAAY,GAAG,qDAArB;;EAEA,MAAMD,OAAO,GAAG,YAAY;IAC1B,IAAI;MACF,MAAME,QAAQ,GAAG,MAAMC,KAAK,CAACF,YAAY,GAAGF,MAAM,CAACK,WAAvB,CAA5B;;MACA,IAAIF,QAAQ,CAACG,EAAb,EAAiB;QACf,MAAM;UAAEC;QAAF,IAAW,MAAMJ,QAAQ,CAACK,IAAT,EAAvB;QACAT,OAAO,CAACQ,IAAD,CAAP;MACD,CAHD,MAGO;QACLE,OAAO,CAACC,GAAR,CAAY,qBAAZ;MACD;IACF,CARD,CAQE,OAAOC,KAAP,EAAc;MACdF,OAAO,CAACC,GAAR,CAAYC,KAAZ;IACD;EACF,CAZD;;EAcA,oBACE,QAAC,SAAD;IAAA,uBACE,QAAC,GAAD;MAAA,uBACE,QAAC,GAAD;QAAA,UACGb,IAAI,CAACc,GAAL,CAAUC,OAAD,iBACR,QAAC,GAAD;UAAoB,IAAI,EAAEA;QAA1B,GAAUlB,MAAM,EAAhB;UAAA;UAAA;UAAA;QAAA,QADD;MADH;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA;EADF;IAAA;IAAA;IAAA;EAAA,QADF;AAWD,CApCD;;GAAME,oB;UAGWD,S;;;KAHXC,oB;AAsCN,eAAeA,oBAAf"},"metadata":{},"sourceType":"module"}