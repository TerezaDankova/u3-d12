{"ast":null,"code":"import { GET_JOBS } from \"../actions\";\nimport { GET_ERROR } from \"../actions\";\nconst initialState = {\n  jobs: [],\n  erro: false\n};\n\nconst jobsSearchReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case GET_JOBS:\n      return { ...state,\n        jobs: [...action.payload]\n      };\n\n    case GET_ERROR:\n      return { ...state,\n        error: true\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default jobsSearchReducer;","map":{"version":3,"names":["GET_JOBS","GET_ERROR","initialState","jobs","erro","jobsSearchReducer","state","action","type","payload","error"],"sources":["/Users/terezadankova/Desktop/GitHub/u3-d12/src/redux/reducers/jobsSearch.js"],"sourcesContent":["import { GET_JOBS } from \"../actions\";\nimport { GET_ERROR } from \"../actions\";\n\nconst initialState = {\n      jobs: [],\n      erro: false,\n    };\n\nconst jobsSearchReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case GET_JOBS: \n      return {\n        ...state,\n        jobs: [...action.payload],\n      };\n  \n      case GET_ERROR:\n        return {\n          ...state,\n          error: true,\n        };\n   \n\n    default:\n      return state;\n  }\n};\n\nexport default jobsSearchReducer;"],"mappings":"AAAA,SAASA,QAAT,QAAyB,YAAzB;AACA,SAASC,SAAT,QAA0B,YAA1B;AAEA,MAAMC,YAAY,GAAG;EACfC,IAAI,EAAE,EADS;EAEfC,IAAI,EAAE;AAFS,CAArB;;AAKA,MAAMC,iBAAiB,GAAG,YAAkC;EAAA,IAAjCC,KAAiC,uEAAzBJ,YAAyB;EAAA,IAAXK,MAAW;;EAC1D,QAAQA,MAAM,CAACC,IAAf;IACE,KAAKR,QAAL;MACE,OAAO,EACL,GAAGM,KADE;QAELH,IAAI,EAAE,CAAC,GAAGI,MAAM,CAACE,OAAX;MAFD,CAAP;;IAKA,KAAKR,SAAL;MACE,OAAO,EACL,GAAGK,KADE;QAELI,KAAK,EAAE;MAFF,CAAP;;IAMJ;MACE,OAAOJ,KAAP;EAfJ;AAiBD,CAlBD;;AAoBA,eAAeD,iBAAf"},"metadata":{},"sourceType":"module"}